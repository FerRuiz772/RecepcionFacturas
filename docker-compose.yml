services:
  db:
    image: mysql:8.0
    container_name: recepcion_facturas_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: recepcion_facturas
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seeds.sql:/docker-entrypoint-initdb.d/02-seeds.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: recepcion_facturas_api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=recepcion_facturas
      - DB_USER=admin
      - DB_PASSWORD=admin123
      - JWT_SECRET=tu-super-secreto-jwt-aqui-cambiar-en-produccion
      - JWT_REFRESH_SECRET=tu-refresh-secret-aqui-cambiar-en-produccion
      - JWT_EXPIRE=1h
      - JWT_REFRESH_EXPIRE=7d
      - ENCRYPTION_KEY=tu-clave-encriptacion-32-caracteres
      - BCRYPT_ROUNDS=12
      - UPLOAD_PATH=./uploads
      - MAX_FILE_SIZE=10485760
      - FRONTEND_URL=http://localhost:8080
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: recepcion_facturas_frontend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - VITE_API_URL=http://localhost:3000
      - VITE_APP_TITLE=Sistema de Gesti√≥n de Pagos
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - app-network
    command: npm run dev -- --host 0.0.0.0 --port 8080

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge