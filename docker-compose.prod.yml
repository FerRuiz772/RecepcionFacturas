version: '3.8'
services:
  recepcion_facturas_db:
    image: mysql:8.0
    container_name: recepcion_facturas_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      - recepcion_facturas_db_data:/var/lib/mysql
      - ./database/001_schema.sql:/docker-entrypoint-initdb.d/001_schema.sql
      - ./database/002_add_permissions_column.sql:/docker-entrypoint-initdb.d/002_add_permissions_column.sql
      - ./database/003_create_user_permissions.sql:/docker-entrypoint-initdb.d/003_create_user_permissions.sql
      - ./database/004_add_password_file_column.sql:/docker-entrypoint-initdb.d/004_add_password_file_column.sql
      - ./database/005_add_password_file_safe.sql:/docker-entrypoint-initdb.d/005_add_password_file_safe.sql
      - ./database/006_add_regimen_isr_and_documentos.sql:/docker-entrypoint-initdb.d/006_add_regimen_isr_and_documentos.sql
      - ./database/007_create_invoice_comments.sql:/docker-entrypoint-initdb.d/007_create_invoice_comments.sql
      - ./database/008_add_serie_and_dte_to_invoices.sql:/docker-entrypoint-initdb.d/008_add_serie_and_dte_to_invoices..sql
      - ./database/009_add_tipo_proveedor.sql:/docker-entrypoint-initdb.d/009_add_tipo_proveedor.sql
      - ./database/010_seeds.sql:/docker-entrypoint-initdb.d/010_seeds.sql
      - ./database/011_add_phone_to_users.sql:/docker-entrypoint-initdb.d/011_add_phone_to_users.sql

    networks:
      - recepcion_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 30s
      timeout: 10s
      retries: 10

  recepcion_facturas_api:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: recepcion_facturas_api
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: recepcion_facturas_db
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_FROM: ${EMAIL_FROM}
      FRONTEND_URL: ${FRONTEND_URL}
      WHATSAPP_ENABLED: ${WHATSAPP_ENABLED}
      WHATSAPP_SESSION_PATH: ${WHATSAPP_SESSION_PATH}
      WHATSAPP_COUNTRY_CODE: ${WHATSAPP_COUNTRY_CODE}
      WHATSAPP_MAX_RETRIES: ${WHATSAPP_MAX_RETRIES}
      WHATSAPP_RETRY_DELAY: ${WHATSAPP_RETRY_DELAY}
    ports:
      - "127.0.0.1:5001:3000"
    volumes:
      - ./uploads:/app/uploads
      - ./backend/logs:/app/logs
      - ./backend/whatsapp_session:/app/whatsapp_session
    depends_on:
      recepcion_facturas_db:
        condition: service_healthy
    networks:
      - recepcion_network

  recepcion_facturas_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_URL=${VITE_API_URL}
    container_name: recepcion_facturas_frontend
    restart: unless-stopped
    env_file:
      - ./.env.production
    ports:
      - "127.0.0.1:8080:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - recepcion_facturas_api
    networks:
      - recepcion_network

volumes:
  recepcion_facturas_db_data:
    driver: local

networks:
  recepcion_network:
    driver: bridge
